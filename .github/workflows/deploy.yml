name: Deploy API to Server

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    environment: production
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🗝️ Create .env file from GitHub Secrets & Vars
        run: |
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ vars.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

          echo "APP_NAME=${{ vars.APP_NAME }}" >> .env
          echo "SERVER_PORT=${{ vars.SERVER_PORT }}" >> .env
          echo "LOG_LEVEL=${{ vars.LOG_LEVEL }}" >> .env
          echo "DDL_AUTO=${{ vars.DDL_AUTO }}" >> .env

          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRATION=${{ vars.JWT_EXPIRATION }}" >> .env
          echo "JWT_ISSUER=${{ vars.JWT_ISSUER }}" >> .env

          echo "PGADMIN_EMAIL=${{ secrets.PGADMIN_EMAIL }}" >> .env
          echo "PGADMIN_PASSWORD=${{ secrets.PGADMIN_PASSWORD }}" >> .env

          echo "ACTUATOR_USERNAME=${{ vars.ACTUATOR_USERNAME }}" >> .env
          echo "ACTUATOR_PASSWORD=${{ secrets.ACTUATOR_PASSWORD }}" >> .env  

      - name: 🚀 Deploy API to server
        run: |
          echo "🔄 Starting API deployment..."

          # Ir al directorio del proyecto clonado por el runner
          cd ${{ github.workspace }}

          # Hacer backup del estado actual
          echo "📦 Creating backup..."
          git stash push -m "pre-deploy-backup-$(date +%Y%m%d_%H%M%S)" || true

          # Actualizar código
          echo "📥 Pulling latest code..."
          git pull origin master

          # Parar contenedores actuales
          echo "🛑 Stopping current API containers..."
          docker-compose down || true

          # Construir y levantar nuevos contenedores
          echo "🏗️ Building and starting API..."
          docker-compose up -d --build

          # Esperar a que el servicio esté listo
          echo "⏳ Waiting for API to be ready..."
          sleep 10

          # Verificar que todo está funcionando
          echo "✅ Verifying API deployment..."
          docker-compose ps

          # Health check
          curl -f http://localhost:3001/actuator/health || echo "⚠️ Health check failed, but container is running"

          # Limpiar imágenes no utilizadas
          echo "🧹 Cleaning up..."
          docker system prune -f

          echo "🎉 API deployment completed successfully!"

      - name: 📧 Notify on success
        if: success()
        run: |
          echo "✅ API Deployment successful!"
          echo "📍 Server: self-hosted runner"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"

      - name: ❌ Notify on failure
        if: failure()
        run: |
          echo "❌ API Deployment failed!"
          echo "Check logs above for details."
